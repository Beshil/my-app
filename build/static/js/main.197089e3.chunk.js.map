{"version":3,"sources":["components/app-header.js","components/search-panel.js","components/post-status-filter.js","components/post-list-item.js","components/post-list.js","components/post-add-form.js","components/app.js","index.js"],"names":["Header","styled","div","AppHeader","liked","allPosts","className","SearchPanel","props","state","term","onUpdateSearch","bind","e","target","value","this","setState","type","placeholder","onChange","Component","PostStatusFilter","buttons","name","label","map","filter","onFilterSelect","clazz","onClick","PostListItem","onDelete","onToggleImportant","onToggleLiked","like","classNames","important","PostList","posts","elements","item","id","itemProps","PostAddForm","text","onValueChange","onSubmit","preventDefault","onAdd","AppBlock","App","data","deleteItem","addItem","maxId","index","findIndex","elem","slice","body","newItem","old","items","length","indexOf","visiblePosts","filterPost","searchPost","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.197089e3.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nimport styled from 'styled-components';\r\n\r\nconst Header = styled.div`\r\n      display: flex;\r\n      align-items: flex-end;\r\n      justify-content: space-between;\r\n     \r\n      h1 {\r\n        font-size: 26px;\r\n      }\r\n\r\n      h2 {\r\n        font-size: 1.2rem;\r\n        color: grey;\r\n      }\r\n`\r\n\r\nconst AppHeader = ({liked, allPosts}) => {\r\n  return (\r\n      <Header className=\"app-header d-flex\">\r\n          <h1>Beshil Ersanbiev</h1>\r\n          <h2>{allPosts} записей, из них понравилось {liked}</h2>\r\n      </Header>\r\n  )\r\n}\r\n\r\nexport default AppHeader;","import React, {Component} from 'react';\r\n\r\nexport default class SearchPanel extends Component {\r\n  constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n          term: ''\r\n      }\r\n      this.onUpdateSearch = this.onUpdateSearch.bind(this);\r\n  }\r\n  onUpdateSearch(e){\r\n      const term = e.target.value;\r\n      this.setState({term});\r\n      this.props.onUpdateSearch(term);\r\n  }\r\n  render() {\r\n      return (\r\n          <input\r\n              className=\"form-control search-input\"\r\n              type=\"text\"\r\n              placeholder=\"Поиск по записям\"\r\n              value={this.state.term}\r\n              onChange={this.onUpdateSearch}\r\n          />\r\n      )\r\n  }\r\n}","import React, {Component} from 'react';\r\n\r\nexport default class PostStatusFilter extends Component {\r\n  constructor(props) {\r\n super(props);\r\n this.buttons = [\r\n   {name: 'all', label: 'Все'},\r\n   {name: 'like', label: 'Понравилось'}\r\n     ];\r\n  }\r\n render() {\r\n\r\n const buttons = this.buttons.map(({name, label}) => {\r\n         const {filter, onFilterSelect} = this.props;\r\n   const active = filter === name;\r\n   const clazz = active ? 'btn-info' : 'btn-outline-secondary'\r\n   return (\r\n     <button type='button'\r\n        className={`btn ${clazz}`}\r\n       key={name}\r\n       onClick={() => onFilterSelect(name)}>\r\n       {label}</button>\r\n   )\r\n });\r\n\r\n     return (\r\n         <div className=\"btn-group\">\r\n             {buttons}\r\n         </div>\r\n     )\r\n }\r\n}","import React, {Component} from 'react';\r\n\r\nexport default class PostListItem extends Component {\r\n\r\n    render() {\r\n        const {label, onDelete, onToggleImportant, onToggleLiked, like, important} = this.props;\r\n        let classNames = 'app-list-item d-flex justify-content-between';\r\n\r\n        if (important) {\r\n            classNames +=' important';\r\n        }\r\n\r\n        if (like) {\r\n            classNames +=' like';\r\n        }\r\n\r\n        return (\r\n            <div className={classNames}>\r\n                <span \r\n                className=\"app-list-item-label\"\r\n                onClick={onToggleLiked}>\r\n                    {label}\r\n                </span>\r\n                <div className=\"d-flex justify-content-center align-items-center\">\r\n                    <button \r\n                    type=\"button\" \r\n                    className=\"btn-star btn-sm\"\r\n                    onClick={onToggleImportant}>\r\n                        <i className=\"fa fa-star\"></i>\r\n                    </button>\r\n                    <button \r\n                    type=\"button\" \r\n                    className=\"btn-trash btn-sm\"\r\n                    onClick={onDelete}>\r\n                        <i className=\"fa fa-trash\"></i>\r\n                    </button>\r\n                    <i className=\"fa fa-heart\"></i>\r\n                </div>\r\n            </div>\r\n        )\r\n        }\r\n}","import React from 'react';\r\nimport PostListItem from './post-list-item'\r\n\r\n\r\nconst PostList = ({posts, onDelete, onToggleImportant, onToggleLiked}) => {\r\n\r\n    const elements = posts.map((item) => {\r\n        const {id, ...itemProps} = item;\r\n        return (\r\n            <li key={id} className='list-group-item'>\r\n                <PostListItem \r\n                    {...itemProps}\r\n                    onDelete={() => onDelete(id)}\r\n                    onToggleImportant={() => onToggleImportant(id)}\r\n                    onToggleLiked={() => onToggleLiked(id)}/>\r\n            </li>\r\n        )\r\n    });\r\n\r\n    return (\r\n        <ul className=\"app-list list-group\">\r\n            {elements}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default PostList;","import React, { Component } from \"react\";\r\n\r\nexport default class PostAddForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      text: \"\",\r\n    };\r\n    this.onValueChange = this.onValueChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n  onValueChange(e) {\r\n    this.setState({\r\n      text: e.target.value,\r\n    });\r\n  }\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    if (!this.state.text) return;\r\n    this.props.onAdd(this.state.text);\r\n    this.setState({\r\n      text: \"\",\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <form className=\"bottom-panel d-flex\" onSubmit={this.onSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"О чем вы думаете сейчас?\"\r\n          className=\"form-control new-post-label\"\r\n          onChange={this.onValueChange}\r\n          value={this.state.text}\r\n        />\r\n        <button type=\"submit\" className=\"btn btn-outline-secondary\">\r\n          Добавить\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import React, {Component} from 'react';\r\nimport AppHeader from './app-header';\r\nimport SearchPanel from './search-panel';\r\nimport PostStatusFilter from './post-status-filter';\r\nimport PostList from './post-list';\r\nimport PostAddForm from './post-add-form';\r\n\r\nimport styled from 'styled-components';\r\n\r\n\r\nimport './search-panel.css';\r\nimport './post-list-item.css';\r\nimport './post-list.css';\r\nimport './post-add-form.css';\r\nimport './post-status-filter.css';\r\n\r\n\r\nconst AppBlock = styled.div`\r\n        margin: 0 auto;\r\n        max-width: 800px;\r\n`\r\n\r\n\r\nexport default class App extends Component {\r\n  constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n          data : [\r\n              {label: 'Going to learn React', important: true, like: false, id: 1},\r\n              {label: 'That is so good', important: false, like: false, id: 2},\r\n              {label: 'I need a break...', important: false, like: false, id: 3}\r\n          ],\r\n          term: '',\r\n          filter: 'all'\r\n      };\r\n      this.deleteItem = this.deleteItem.bind(this);\r\n      this.addItem = this.addItem.bind(this);\r\n      this.onToggleImportant = this.onToggleImportant.bind(this);\r\n      this.onToggleLiked = this.onToggleLiked.bind(this);\r\n      this.onUpdateSearch = this.onUpdateSearch.bind(this);\r\n      this.onFilterSelect = this.onFilterSelect.bind(this);\r\n      this.maxId = 4;\r\n  }\r\n\r\n  deleteItem(id) {\r\n      this.setState(({data}) => {\r\n          const index = data.findIndex(elem => elem.id === id);\r\n\r\n          const newArr = [...data.slice(0, index), ...data.slice(index + 1)];\r\n\r\n          return {\r\n              data: newArr\r\n          }\r\n      });\r\n  }\r\n\r\n  addItem(body) {\r\n      const newItem = {\r\n          label: body,\r\n          important: false,\r\n          id: this.maxId++\r\n      }\r\n      this.setState(({data}) => {\r\n          const newArr = [...data, newItem];\r\n          return {\r\n              data: newArr\r\n          }\r\n      })\r\n  }\r\n\r\n  onToggleImportant(id) {\r\n      this.setState(({data}) => {\r\n          const index = data.findIndex(elem => elem.id === id);\r\n\r\n          const old = data[index];\r\n          const newItem = {...old, important: !old.important};\r\n\r\n          const newArr = [...data.slice(0, index), newItem, ...data.slice(index + 1)];\r\n          return {\r\n              data: newArr\r\n          }\r\n      }); \r\n  }\r\n\r\n  onToggleLiked(id) {\r\n      this.setState(({data}) => {\r\n          const index = data.findIndex(elem => elem.id === id);\r\n\r\n          const old = data[index];\r\n          const newItem = {...old, like: !old.like};\r\n\r\n          const newArr = [...data.slice(0, index), newItem, ...data.slice(index + 1)];\r\n          return {\r\n              data: newArr\r\n          }\r\n      }); \r\n  }\r\n\r\n  searchPost(items, term) {\r\n      if (term.length === 0) {\r\n          return items\r\n      }\r\n\r\n      return items.filter((item) => {\r\n          return item.label.indexOf(term) > -1\r\n      });\r\n  }\r\n\r\n  filterPost(items, filter) {\r\n      if (filter === 'like') {\r\n          return items.filter(item => item.like)\r\n      } else {\r\n          return items\r\n      }\r\n  }\r\n\r\n  onUpdateSearch(term) {\r\n      this.setState({term})\r\n  }\r\n  \r\n  onFilterSelect(filter){\r\n      this.setState({filter})\r\n  }\r\n     render(){\r\n      const {data, term, filter} = this.state;\r\n\r\n      const liked = data.filter((item) => item.like).length;\r\n      const allPosts = data.length;\r\n      const visiblePosts = this.filterPost(this.searchPost(data, term), filter);\r\n          return (\r\n            <AppBlock>\r\n                   <AppHeader liked={liked} allPosts={allPosts}/>\r\n                <div className=\"search-panel d-flex\">\r\n                    <SearchPanel\r\n                        onUpdateSearch={this.onUpdateSearch}/>\r\n                    <PostStatusFilter\r\n                        filter={filter}\r\n                        onFilterSelect={this.onFilterSelect}/>\r\n                </div>\r\n                <PostList \r\n                posts={visiblePosts}\r\n                onDelete={this.deleteItem}\r\n                onToggleImportant={this.onToggleImportant}\r\n                onToggleLiked={this.onToggleLiked}/>\r\n                <PostAddForm\r\n                onAdd={this.addItem}/>\r\n            </AppBlock>\r\n          )\r\n     }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}